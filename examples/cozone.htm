<!DOCTYPE HTML>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cozone</title>
    <link rel="stylesheet" href="../src/css/pannellum.css"/>
    <!-- <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/pannellum@2.5.6/build/pannellum.js"></script> -->
    <script type="text/javascript" src="../src/js/libpannellum.js"></script>
    <script type="text/javascript" src="../src/js/pannellum.js"></script>

    <style>
    #panorama {
        width: 100%;
        height: 98%;
        position:absolute;
    }
    html {
        overflow:hidden;
    }
    body {
        margin:0px;
    }
     #controls {
        position: absolute;
        bottom: 0;
        z-index: 2;
        text-align: center;
        width: 100%;
        padding-bottom: 3px;
    }
    .ctrl {
        padding: 8px 5px;
        width: 30px;
        text-align: center;
        background: rgba(200, 200, 200, 0.8);
        display: inline-block;
        cursor: pointer;
    }
    .ctrl:hover {
        background: rgba(200, 200, 200, 1);
    }


    </style>
</head>
<body>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>

<input type="radio" name="foo" value="1080p" checked> 1080p </input>
<input type="radio" name="foo" value="2160p"> 2160p </input>
<div id="panorama">
    <div id="controls">
        <div class="ctrl" id="pan-up">&#9650;</div>
        <div class="ctrl" id="pan-down">&#9660;</div>
        <div class="ctrl" id="pan-left">&#9664;</div>
        <div class="ctrl" id="pan-right">&#9654;</div>
    </div>

</div>

<script>



var viewer = pannellum.viewer('panorama', { 'scenes': {}, 'autoLoad': true, 'showFullscreenCtrl': true, 'showZoomCtrl': true } );

const pitch_thres = 180/6;
const yaw_thres = 180/4;
const length = 42;
const width = 22;
const height = 2;
const area = length * width;
const volume = length * width * height;
var h = 0;
var index;
var pitch = 0, yaw = 0, hfov = 100;

$('input[type=radio]').change(function() {
   h = 0;
   removeScenes()
   addScenes(this.value);

});


function addScenes(resolution){
   
    for (let i = 0 ; i < volume; i++){

        viewer.addScene(`${i}`, {
        "type": "equirectangular",
        "panorama": `./cozone360_frames_${resolution}/${i}.jpg`

        });

    }
    index = 4 + h * area;
    viewer.loadScene(`${index}`);
}

function removeScenes(){
    for (let i = 0 ; i < volume; i++){
        const res = viewer.removeScene(`${i}`);
       // console.log(res);

    }



}


addScenes("1080p");




window.addEventListener('keydown', function(event) {

    //var key = event.key; 
    console.log(pitch, yaw);

    var key = findKey(pitch, yaw, event.key);

    switch (key) {
        case "j":
            {               
                const tmp = index - length;
                index = tmp < h * area ? index: tmp; 
                viewer.loadScene(`${index}`);
                viewer.setPitch(pitch, 0);
                viewer.setYaw(yaw, 0);
                viewer.setHfov(hfov, 0);

            } 
                
            break;
        case "l":
            {
                const tmp = index + length;
                index = tmp >= ( h + 1) * area ? index: tmp;
                viewer.loadScene(`${index}`);
                viewer.setPitch(pitch, 0);
                viewer.setYaw(yaw, 0);
                viewer.setHfov(hfov, 0);
            }

            break;
        case "i":
            {
                const tmp = index + 1;  
                index = tmp % length == 0 ? index: tmp;
                viewer.loadScene(`${index}`);
                viewer.setPitch(pitch, 0);
                viewer.setYaw(yaw, 0);
                viewer.setHfov(hfov, 0);
            }
            break;
        case "k":

            {
                const tmp = index - 1;  
                index = (tmp + 1) % length == 0 ? index: tmp;
                viewer.loadScene(`${index}`);
                viewer.setPitch(pitch, 0);
                viewer.setYaw(yaw, 0);
                viewer.setHfov(hfov, 0);
         
            }

            break;

        case "u":
            {
                h++;
                const tmp = index + area;
                if (h < height) index = tmp;
                else h = height -1;
                viewer.loadScene(`${index}`);
                viewer.setPitch(pitch, 0);
                viewer.setYaw(yaw, 0);
                viewer.setHfov(hfov, 0);
                console.log("h++:", h);
            
            }
            break;

        case "h":
            
            {
                h--;
                const tmp = index - area;
                if (h < 0) h = 0;
                else index = tmp
                viewer.loadScene(`${index}`);
                viewer.setPitch(pitch, 0);
                viewer.setYaw(yaw, 0);
                viewer.setHfov(hfov, 0);
                console.log("h--:", h);


            }


            break;

        case "ArrowUp":
            pitch = viewer.getPitch();
            yaw = viewer.getYaw();

            break;


        case "ArrowDown":
            pitch = viewer.getPitch();
            yaw = viewer.getYaw();


            
        break;   
        case "ArrowLeft":
            pitch = viewer.getPitch();
            yaw = viewer.getYaw();

            break;


        case "ArrowRight":
            pitch = viewer.getPitch();
            yaw = viewer.getYaw();

        break;  



}
console.log(index);

});

window.addEventListener( 'mousemove', function (event){

    pitch = viewer.getPitch();
    yaw = viewer.getYaw();
   
  //  console.log(pitch, yaw, hfov);


}, false );

window.addEventListener("wheel", (event) =>{
    hfov = viewer.getHfov();

}, false);

document.getElementById('pan-up').addEventListener('click', function(e) {
    window.dispatchEvent(new KeyboardEvent('keydown', {'key': 'i'}));
});
document.getElementById('pan-down').addEventListener('click', function(e) {
     window.dispatchEvent(new KeyboardEvent('keydown', {'key': 'k'}));
});
document.getElementById('pan-left').addEventListener('click', function(e) {
    window.dispatchEvent(new KeyboardEvent('keydown', {'key': 'j'}));
});
document.getElementById('pan-right').addEventListener('click', function(e) {
     window.dispatchEvent(new KeyboardEvent('keydown', {'key': 'l'}));
});

function findKey(pitch, yaw, key) {
    

    if (pitch > pitch_thres && !(yaw > yaw_thres || yaw < -yaw_thres)  )   {
        if (key=="i") key = "u";
        else if (key=="j") key = "j";
        else if (key=="k") key = "h";
        else if (key=="l") key = "l";
    } else if (pitch < -pitch_thres && !(yaw > yaw_thres || yaw < -yaw_thres)  )   {
        if (key=="i") key = "h";
        else if (key=="j") key = "j";
        else if (key=="k") key = "u";
        else if (key=="l") key = "l";
    } else if (!(pitch > pitch_thres || pitch < -pitch_thres) && (yaw > yaw_thres && yaw < 3*yaw_thres) ) {
        if (key=="i") key = "l";
        else if (key=="j") key = "i";
        else if (key=="k") key = "j";
        else if (key=="l") key = "k";
    } else if ( pitch > pitch_thres && (yaw > yaw_thres && yaw < 3*yaw_thres) ) {
        if (key=="i") key = "u";
        else if (key=="j") key = "i";
        else if (key=="k") key = "h";
        else if (key=="l") key = "k";
    } else if ( pitch < -pitch_thres && (yaw > yaw_thres && yaw < 3*yaw_thres) ) {
        if (key=="i") key = "h";
        else if (key=="j") key = "i";
        else if (key=="k") key = "u";
        else if (key=="l") key = "k";
    } else if (!(pitch > pitch_thres || pitch < -pitch_thres) && (yaw < -yaw_thres && yaw > -3*yaw_thres) ) {
        if (key=="i") key = "j";
        else if (key=="j") key = "k";
        else if (key=="k") key = "l";
        else if (key=="l") key = "i";
    }else if (pitch > pitch_thres  && (yaw < -yaw_thres && yaw > -3*yaw_thres) ) {
        if (key=="i") key = "u";
        else if (key=="j") key = "k";
        else if (key=="k") key = "h";
        else if (key=="l") key = "i";
    }else if (pitch < -pitch_thres  && (yaw < -yaw_thres && yaw > -3*yaw_thres) ) {
        if (key=="i") key = "h";
        else if (key=="j") key = "k";
        else if (key=="k") key = "u";
        else if (key=="l") key = "i";
    }else if ( !(pitch > pitch_thres || pitch < -pitch_thres) && (yaw > 3*yaw_thres || yaw < -3*yaw_thres)) {
        if (key=="i") key = "k";
        else if (key=="j") key = "l";
        else if (key=="k") key = "i";
        else if (key=="l") key = "j";
    }else if ( pitch > pitch_thres  && (yaw > 3*yaw_thres || yaw < -3*yaw_thres)) {
        if (key=="i") key = "u";
        else if (key=="j") key = "l";
        else if (key=="k") key = "h";
        else if (key=="l") key = "j";
    }else if (  pitch < -pitch_thres && (yaw > 3*yaw_thres || yaw < -3*yaw_thres)) {
        if (key=="i") key = "h";
        else if (key=="j") key = "l";
        else if (key=="k") key = "u";
        else if (key=="l") key = "j";
    }
    return key;

}
</script>

</body>
</html>